{"ast":null,"code":"var _jsxFileName = \"/mnt/c/users/james/desktop/dev_tools/environment/src/job-hunter-app/src/Components/JobList.js\";\nimport React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { List, Grid, makeStyles, createStyles } from \"@material-ui/core\";\nimport { JobListItem } from \"./JobListItem\";\nimport { useJobStore } from \"../Stores/hooks\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752\n  }\n}));\nexport const JobList = observer(() => {\n  const classes = useStyles();\n  const url = \"https://jobs.github.com/positions.json\";\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n  let getJobs;\n  fetch(proxyUrl + url).then(response => response.json()).then(jobs => {\n    getJobs = () => {\n      let jobCompany = jobs.company;\n      jobCompany.forEach(company => {\n        return company;\n      });\n    };\n\n    for (let i = 0; i < 5; i++) {\n      setJobs({\n        id: jobs[i].id,\n        company: jobs[i].company\n      });\n    }\n  });\n  const {\n    jobMapToArray,\n    setJobs\n  } = useJobStore();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, getJobs), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    dense: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, jobMapToArray.map(job => /*#__PURE__*/React.createElement(Grid, {\n    key: job[0],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(JobListItem, {\n    car: job[1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })))))));\n});","map":{"version":3,"sources":["/mnt/c/users/james/desktop/dev_tools/environment/src/job-hunter-app/src/Components/JobList.js"],"names":["React","observer","List","Grid","makeStyles","createStyles","JobListItem","useJobStore","useStyles","theme","root","flexGrow","maxWidth","JobList","classes","url","proxyUrl","getJobs","fetch","then","response","json","jobs","jobCompany","company","forEach","i","setJobs","id","jobMapToArray","map","job"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,UAArB,EAAiCC,YAAjC,QAAqD,mBAArD;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,iBAA5B;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,IAC3BJ,YAAY,CAAC;AACXK,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,QAAQ,EAAE;AAFN;AADK,CAAD,CADc,CAA5B;AASA,OAAO,MAAMC,OAAO,GAAGZ,QAAQ,CAAC,MAAM;AACpC,QAAMa,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAMO,GAAG,GAAG,wCAAZ;AACA,QAAMC,QAAQ,GAAG,sCAAjB;AAEA,MAAIC,OAAJ;AAEAC,EAAAA,KAAK,CAACF,QAAQ,GAAGD,GAAZ,CAAL,CACGI,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdL,IAAAA,OAAO,GAAG,MAAM;AACd,UAAIM,UAAU,GAAGD,IAAI,CAACE,OAAtB;AACAD,MAAAA,UAAU,CAACE,OAAX,CAAoBD,OAAD,IAAa;AAC9B,eAAOA,OAAP;AACD,OAFD;AAGD,KALD;;AAMA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BC,MAAAA,OAAO,CAAC;AACNC,QAAAA,EAAE,EAAEN,IAAI,CAACI,CAAD,CAAJ,CAAQE,EADN;AAENJ,QAAAA,OAAO,EAAEF,IAAI,CAACI,CAAD,CAAJ,CAAQF;AAFX,OAAD,CAAP;AAID;AACF,GAfH;AAiBA,QAAM;AAAEK,IAAAA,aAAF;AAAiBF,IAAAA;AAAjB,MAA6BpB,WAAW,EAA9C;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEO,OAAO,CAACJ,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,OAAL,CADF,eAEE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,aAAa,CAACC,GAAd,CAAmBC,GAAD,iBACjB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,GAAG,CAAC,CAAD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,GAAG,CAAC,CAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CADF,CADF,CAFF,CADF;AAgBD,CA3C8B,CAAxB","sourcesContent":["import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { List, Grid, makeStyles, createStyles } from \"@material-ui/core\";\nimport { JobListItem } from \"./JobListItem\";\nimport { useJobStore } from \"../Stores/hooks\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n      maxWidth: 752,\n    },\n  })\n);\n\nexport const JobList = observer(() => {\n  const classes = useStyles();\n\n  const url = \"https://jobs.github.com/positions.json\";\n  const proxyUrl = \"https://cors-anywhere.herokuapp.com/\";\n\n  let getJobs;\n\n  fetch(proxyUrl + url)\n    .then((response) => response.json())\n    .then((jobs) => {\n      getJobs = () => {\n        let jobCompany = jobs.company;\n        jobCompany.forEach((company) => {\n          return company;\n        });\n      };\n      for (let i = 0; i < 5; i++) {\n        setJobs({\n          id: jobs[i].id,\n          company: jobs[i].company,\n        });\n      }\n    });\n\n  const { jobMapToArray, setJobs } = useJobStore();\n\n  return (\n    <div className={classes.root}>\n      <h1>{getJobs}</h1>\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <List dense={true}>\n            {jobMapToArray.map((job) => (\n              <Grid key={job[0]}>\n                <JobListItem car={job[1]} />\n              </Grid>\n            ))}\n          </List>\n        </Grid>\n      </Grid>\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}